name: Deploy Stinkbait

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install the zip
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          sudo apt-get install -y python3
          sudo apt-get install -y python3-pip

      - name: Pip Install Lambda Packages
        run: pip3 install -r requirements.txt -t ./packages --upgrade

      - name: Change Directory
        run: cd packages

      - name: Zip Packages
        run: zip -r ../lambda.zip .

      - name: Change Directory
        run: cd ..

      - name: Create Zip
        run: zip -r lambda.zip templates/

      - name: Create Zip
        run: zip -r lambda.zip static/

      - name: Create Zip
        run: zip -r lambda.zip lambda_function.py routes.py allow.py

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::369912791300:role/github-action-role


  deploy-stack:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::369912791300:role/github-action-role

      - name: Delete the CloudFormation Stack
        run: aws cloudformation delete-stack --stack-name stinkbait
      #       - name: Check for "CREATE_FAILED" Cloudformation events
      #         run: |
      #           failed_events=$(aws cloudformation describe-stack-events --stack-name stinkbait --query "StackEvents[?ResourceStatus=='CREATE_FAILED']")
      #           echo "$failed_events" >> failed_events.log
      #           if [ -n "$failed_events" ]; then
      #             echo "The following CREATE_FAILED events were found:"
      #             echo "$failed_events"
      #           fi
      - name: Package Lambda Function Code
        run: aws cloudformation package --template-file template.yaml --s3-bucket infantsense --output-template-file packaged_template.yaml --region us-east-1
      - name: Sleep for 15 seconds
        run: sleep 15
      - name: Deploy the CloudFormation Stack
        run: aws cloudformation deploy --template-file proxy_template.yaml --stack-name stinkbait --capabilities CAPABILITY_NAMED_IAM
      - name: Get the Stack Output Information
        run: aws cloudformation describe-stacks --stack-name stinkbait --query "Stacks[0].Outputs" --output text
